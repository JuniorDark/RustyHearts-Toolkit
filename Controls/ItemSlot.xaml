<UserControl
    x:Class="RHToolkit.Controls.ItemSlot"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="clr-namespace:RHToolkit.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <UserControl.Resources>
        <!--  DataTemplates for different tooltip content based on ItemType  -->
        <DataTemplate x:Key="ItemFrameTemplate">
            <control:ItemFrame DataContext="{Binding}" />
        </DataTemplate>

        <DataTemplate x:Key="CostumeFrameTemplate">
            <control:CostumeFrame DataContext="{Binding}" />
        </DataTemplate>

        <DataTemplate x:Key="GearFrameTemplate">
            <control:GearFrame DataContext="{Binding}" />
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Button
            x:Name="buttonItem"
            Width="44"
            Height="44"
            Background="Transparent"
            BorderBrush="Transparent"
            Cursor="Hand"
            Tag="{Binding FrameViewModel, RelativeSource={RelativeSource AncestorType=UserControl}}">
            <Button.ToolTip>
                <ToolTip
                    MaxWidth="325"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    Visibility="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource NullToVisibilityConverter}}">
                    <!--  Content control with dynamic template  -->
                    <ContentControl Content="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ToolTip}}">
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Setter Property="ContentTemplate" Value="{StaticResource GearFrameTemplate}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PlacementTarget.Tag.Type, RelativeSource={RelativeSource AncestorType=ToolTip}}" Value="1">
                                        <Setter Property="ContentTemplate" Value="{StaticResource ItemFrameTemplate}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PlacementTarget.Tag.Type, RelativeSource={RelativeSource AncestorType=ToolTip}}" Value="2">
                                        <Setter Property="ContentTemplate" Value="{StaticResource CostumeFrameTemplate}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PlacementTarget.Tag.Type, RelativeSource={RelativeSource AncestorType=ToolTip}}" Value="3">
                                        <Setter Property="ContentTemplate" Value="{StaticResource GearFrameTemplate}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PlacementTarget.Tag.Type, RelativeSource={RelativeSource AncestorType=ToolTip}}" Value="4">
                                        <Setter Property="ContentTemplate" Value="{StaticResource GearFrameTemplate}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </ToolTip>
            </Button.ToolTip>
            <Button.InputBindings>
                <!--  Left-click command  -->
                <MouseBinding
                    Command="{Binding AddItemCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    CommandParameter="{Binding CommandParameter, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    Gesture="LeftClick" />
                <!--  Right-click command  -->
                <MouseBinding
                    Command="{Binding RemoveItemCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    CommandParameter="{Binding CommandParameter, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    Gesture="RightClick" />
            </Button.InputBindings>
        </Button>
        <Image
            x:Name="imgItemEmpty"
            Width="44"
            Height="44"
            VerticalAlignment="Top"
            d:Source="/Assets/images/lb_ac_icon.png"
            IsHitTestVisible="False"
            Source="{Binding SlotIcon, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource SlotIconConverter}}"
            Stretch="Fill" />
        <Image
            x:Name="imgItemIcon"
            Width="36"
            Height="36"
            Margin="0,4,1,0"
            VerticalAlignment="Top"
            IsHitTestVisible="False">
            <Image.Source>
                <MultiBinding Converter="{StaticResource IconNameToImageSourceMultiConverter}">
                    <Binding Path="FrameViewModel.IconName" RelativeSource="{RelativeSource AncestorType=UserControl}" />
                    <Binding ElementName="buttonItem" Path="IsEnabled" />
                </MultiBinding>
            </Image.Source>
        </Image>

        <Image
            x:Name="imgItemIconBranch"
            Width="42"
            Height="42"
            Margin="0,0,0,0"
            VerticalAlignment="Top"
            IsHitTestVisible="False"
            Source="{Binding FrameViewModel.ItemBranch, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BranchToImageSourceConverter}}"
            Stretch="Fill" />
        <TextBlock
            x:Name="tbItemAmount"
            Grid.Column="0"
            Width="Auto"
            Margin="10,23,7,0"
            VerticalAlignment="Top"
            d:Text="1"
            FlowDirection="RightToLeft"
            FontSize="12"
            FontWeight="Bold"
            Foreground="White"
            IsHitTestVisible="False"
            Text="{Binding FrameViewModel.ItemAmount, RelativeSource={RelativeSource AncestorType=UserControl}}"
            Visibility="{Binding FrameViewModel.ItemAmount, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource GreaterOrEqualToVisibilityConverter}, ConverterParameter=2}" />
    </Grid>
</UserControl>
