<Page
    x:Class="RHToolkit.Views.Pages.CharacterEditPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:RHToolkit.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:pages="clr-namespace:RHToolkit.ViewModels.Pages"
    Title="Character Edit"
    d:DataContext="{d:DesignInstance local:CharacterEditPage,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="600"
    d:DesignWidth="1280"
    mc:Ignorable="d">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200*" />
            <ColumnDefinition Width="150*" />
            <ColumnDefinition Width="150*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="300*" />
            <RowDefinition Height="250" />
        </Grid.RowDefinitions>
        <StackPanel
            Grid.Row="0"
            Grid.ColumnSpan="3"
            Margin="0,5"
            HorizontalAlignment="Left"
            Orientation="Horizontal">
            <CheckBox
                Command="{Binding ViewModel.SelectAllCheckedCommand, Mode=OneWay}"
                CommandParameter="{Binding RelativeSource={RelativeSource Self}, Mode=OneWay}"
                Content="All"
                IsChecked="{Binding ViewModel.SelectAllCheckBoxChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                IsThreeState="True"
                Template="{StaticResource lb_checkbox}" />
            <CheckBox
                Command="{Binding ViewModel.SingleCheckedCommand, Mode=OneWay}"
                CommandParameter="1"
                Content="Online"
                IsChecked="{Binding ViewModel.OnlineCheckBoxChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Template="{StaticResource lb_checkbox}" />
            <CheckBox
                Command="{Binding ViewModel.SingleCheckedCommand, Mode=OneWay}"
                CommandParameter="2"
                Content="Offline"
                IsChecked="{Binding ViewModel.OfflineCheckBoxChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Template="{StaticResource lb_checkbox}" />
            <TextBox
                Width="300"
                Height="35"
                Margin="10,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="Black"
                BorderThickness="0"
                Foreground="White"
                Tag="Character Name/Account"
                Template="{StaticResource lb_textbox}"
                Text="{Binding ViewModel.SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Button
                x:Name="btnSearch"
                Width="150"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="Transparent"
                Command="{Binding ViewModel.ReadCharacterDataCommand}"
                Content="Search"
                Cursor="Hand"
                Foreground="White"
                Style="{StaticResource lb_def_button02}" />
        </StackPanel>

        <!--  Datagrid  -->
        <Grid
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>
            <DataGrid
                x:Name="dataGridView"
                Height="250"
                Margin="0,5,0,0"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                AutoGenerateColumns="False"
                BorderBrush="#FF0F0D0A"
                CanUserAddRows="False"
                ColumnWidth="Auto"
                EnableColumnVirtualization="True"
                EnableRowVirtualization="True"
                FontFamily="{StaticResource ArialUnicodeMS}"
                FontSize="12"
                HeadersVisibility="Column"
                HorizontalGridLinesBrush="White"
                HorizontalScrollBarVisibility="Disabled"
                ItemsSource="{Binding ViewModel.CharacterDataList}"
                SelectedItem="{Binding ViewModel.CharacterData, Mode=TwoWay}"
                SelectionMode="Single"
                Template="{StaticResource lb_datagrid}"
                VerticalGridLinesBrush="White">
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Blue" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DarkBlue" />
                </DataGrid.Resources>
                <DataGrid.Foreground>
                    <ImageBrush />
                </DataGrid.Foreground>
                <DataGrid.Background>
                    <ImageBrush />
                </DataGrid.Background>
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Width="80*"
                        Binding="{Binding AccountName}"
                        Header="Account"
                        IsReadOnly="True" />
                    <DataGridTextColumn
                        Width="100*"
                        Binding="{Binding CharacterName}"
                        Header="Character Name"
                        IsReadOnly="True" />
                    <DataGridTextColumn
                        Width="140*"
                        Binding="{Binding CreateTime}"
                        Header="Create Date"
                        IsReadOnly="True" />
                    <DataGridTemplateColumn
                        Width="50*"
                        Header="Class"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Class, Converter={StaticResource CharacterClassConverter}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="70*"
                        Header="Focus"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource CharacterJobConverter}">
                                            <Binding Path="Class" />
                                            <Binding Path="Job" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn
                        Width="50*"
                        Binding="{Binding Level}"
                        Header="Level"
                        IsReadOnly="True" />
                    <DataGridTextColumn
                        Width="90*"
                        Binding="{Binding Gold}"
                        Header="Gold"
                        IsReadOnly="True" />
                    <DataGridTemplateColumn
                        Width="60*"
                        Header="State"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding IsConnect, Converter={StaticResource IsConnectConverter}}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsConnect}" Value="Y">
                                                    <Setter Property="Foreground" Value="Green" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsConnect}" Value="N">
                                                    <Setter Property="Foreground" Value="Red" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="15"
                Foreground="White">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="Search for a character." />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ViewModel.CharacterDataList.Count}" Value="0">
                                <Setter Property="Text" Value="No data found." />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ViewModel.IsFirstTimeInitialized}" Value="False">
                                <Setter Property="Text" Value="" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
                <TextBlock.Visibility>
                    <Binding Converter="{StaticResource ZeroToVisibilityConverter}" Path="ViewModel.CharacterDataList.Count" />
                </TextBlock.Visibility>
            </TextBlock>

            <StackPanel
                Grid.Row="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Orientation="Horizontal"
                Visibility="{Binding ViewModel.IsButtonPanelVisible}">
                <Button
                    Width="150"
                    Margin="10,10"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Command="{Binding ViewModel.EditCharacterCommand}"
                    Content="Edit Character"
                    Cursor="Hand"
                    Foreground="White"
                    IsEnabled="{Binding ViewModel.IsEditCharacterButtonEnabled}"
                    Style="{StaticResource lb_def_button02}" />
                <Button
                    Width="150"
                    Margin="10,10"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Command="{Binding ViewModel.DeleteCharacterCommand}"
                    Content="Delete Character"
                    Cursor="Hand"
                    Foreground="White"
                    IsEnabled="{Binding ViewModel.IsDeleteCharacterButtonEnabled}"
                    Style="{StaticResource lb_def_button02}" />

            </StackPanel>
        </Grid>
        <StackPanel
            Grid.Row="2"
            Grid.ColumnSpan="3"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Orientation="Horizontal"
            Visibility="{Binding ViewModel.IsButtonPanelVisible}">
            <Button
                x:Name="btnFortune"
                Width="150"
                Margin="5,5"
                Background="Transparent"
                Command="{Binding ViewModel.OpenFortuneWindowCommand}"
                Content="Fortune"
                Cursor="Hand"
                Foreground="White"
                IsEnabled="{Binding ViewModel.IsButtonEnabled}"
                Style="{StaticResource lb_def_button02}" />
            <Button
                x:Name="btnTitle"
                Width="150"
                Margin="5,5"
                Background="Transparent"
                Command="{Binding ViewModel.OpenTitleWindowCommand}"
                Content="Title"
                Cursor="Hand"
                Foreground="White"
                IsEnabled="{Binding ViewModel.IsButtonEnabled}"
                Style="{StaticResource lb_def_button02}" />
            <Button
                x:Name="btnSanction"
                Width="150"
                Margin="5,5"
                Background="Transparent"
                Command="{Binding ViewModel.OpenSanctionWindowCommand}"
                Content="Sanctions"
                Cursor="Hand"
                Foreground="White"
                IsEnabled="{Binding ViewModel.IsButtonEnabled}"
                Style="{StaticResource lb_def_button02}" />
        </StackPanel>
    </Grid>
</Page>
