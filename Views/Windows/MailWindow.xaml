<Window
    x:Class="RHToolkit.Views.Windows.MailWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:bh="clr-namespace:RHToolkit.Behaviors"
    xmlns:control="clr-namespace:RHToolkit.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:RHToolkit.Views.Windows"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="Mail Tool"
    Width="720"
    Height="640"
    MinWidth="720"
    MinHeight="640"
    bh:WindowBehaviors.EnableDoubleClickMaximize="True"
    bh:WindowBehaviors.EnableDragMove="True"
    d:DataContext="{d:DesignInstance local:MailWindow,
                                     IsDesignTimeCreatable=False}"
    AllowsTransparency="True"
    Background="Transparent"
    Icon="/Assets/ico/icon_mail.png"
    ResizeMode="CanResizeWithGrip"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">
    <ContentControl Template="{StaticResource box_red02}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60*" />
                <ColumnDefinition Width="100*" />
                <ColumnDefinition Width="60*" />

            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="35" />
                <RowDefinition Height="45" />
                <RowDefinition Height="45" />
                <RowDefinition Height="260" />
                <RowDefinition Height="60" />
                <RowDefinition Height="45" />
                <RowDefinition Height="45" />
                <RowDefinition Height="45" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <!--  Close Button  -->
            <ui:TitleBar
                x:Name="TitleBar"
                Title="Send Mail"
                Grid.Row="0"
                Grid.ColumnSpan="3"
                Height="28"
                Margin="0,5,0,0"
                ButtonsForeground="White"
                CloseWindowByDoubleClickOnIcon="True"
                FontSize="15"
                Foreground="White">
                <ui:TitleBar.Icon>
                    <ui:ImageIcon
                        Width="20"
                        Height="20"
                        Margin="0,-1,0,-3"
                        Source="/Assets/icon/icon_mail.png" />
                </ui:TitleBar.Icon>
            </ui:TitleBar>
            <StackPanel
                Grid.Row="1"
                Grid.Column="0"
                Margin="10"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <Label
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Content="Recipient(s)"
                    Foreground="White"
                    Target="{Binding ElementName=txtRecipient}" />
                <Image
                    x:Name="imgHelp"
                    Width="16"
                    Height="16"
                    Margin="10,3,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Cursor="Help"
                    Source="/Assets/icon/icon_help_tip.png"
                    Stretch="None"
                    ToolTip="Name of the characters that will receive the mail. Names must be sepparated by comma ','" />
            </StackPanel>
            <!--  Recipient TextBox  -->
            <TextBox
                x:Name="txtRecipient"
                Grid.Row="1"
                Grid.ColumnSpan="3"
                Width="300"
                Height="35"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Background="Black"
                BorderThickness="0"
                Foreground="White"
                IsEnabled="{Binding ViewModel.IsRecipientEabled}"
                Tag="Recipient"
                Template="{StaticResource lb_textbox}"
                Text="{Binding ViewModel.Recipient, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--  Send To All CheckBox  -->
            <CheckBox
                x:Name="chkSendToAll"
                Grid.Row="1"
                Grid.Column="2"
                VerticalAlignment="Top"
                Content="Send to All Characters"
                Foreground="White"
                IsChecked="{Binding ViewModel.SendToAll}"
                Template="{StaticResource lb_checkbox}" />
            <!--  Sender  -->
            <StackPanel
                Grid.Row="2"
                Grid.Column="0"
                Margin="10"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <Label
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Content="Sender"
                    Foreground="White"
                    Target="{Binding ElementName=txtSender}" />
                <Image
                    x:Name="imgHelpSender"
                    Width="16"
                    Height="16"
                    Margin="10,3,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Cursor="Help"
                    Source="/Assets/icon/icon_help_tip.png"
                    Stretch="None"
                    ToolTip="Name of the sender." />
            </StackPanel>
            <!--  Sender TextBox  -->
            <TextBox
                x:Name="txtSender"
                Grid.Row="2"
                Grid.ColumnSpan="3"
                Width="300"
                Height="35"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Background="Black"
                BorderThickness="0"
                Foreground="White"
                Tag="Sender"
                Template="{StaticResource lb_textbox}"
                Text="{Binding ViewModel.Sender, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--  Message  -->
            <StackPanel
                Grid.Row="3"
                Grid.ColumnSpan="3"
                Margin="0,10,100,0"
                HorizontalAlignment="Center"
                Orientation="Vertical">
                <!--  Message Panel  -->
                <TextBox
                    x:Name="txtMailContent"
                    Grid.Row="3"
                    Grid.ColumnSpan="2"
                    Width="418"
                    Height="250"
                    d:Text="Game Master InsertItem!"
                    BorderThickness="0"
                    CaretBrush="White"
                    FontFamily="{StaticResource ArialUnicodeMS}"
                    Foreground="White"
                    MaxLength="128"
                    Text="{Binding ViewModel.MailContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextWrapping="Wrap"
                    VerticalScrollBarVisibility="Auto">
                    <TextBox.Background>
                        <ImageBrush ImageSource="/Assets/images/lb_mail_paper.png" />
                    </TextBox.Background>
                    <TextBox.Template>
                        <ControlTemplate TargetType="TextBox">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    CanContentScroll="true"
                                    Focusable="false"
                                    HorizontalScrollBarVisibility="Disabled"
                                    VerticalScrollBarVisibility="Auto">
                                    <ScrollViewer.Style>
                                        <Style TargetType="ScrollViewer">
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                        </Style>
                                    </ScrollViewer.Style>
                                    <ScrollViewer.Resources>
                                        <Style BasedOn="{StaticResource CustomScrollBarStyle}" TargetType="ScrollBar" />
                                    </ScrollViewer.Resources>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </TextBox.Template>
                </TextBox>
            </StackPanel>
            <StackPanel
                Grid.Row="3"
                Grid.Column="3"
                Margin="0,10,0,0"
                HorizontalAlignment="Center"
                Orientation="Vertical">
                <!--  Save Template Button  -->
                <Button
                    x:Name="btnSaveTemplate"
                    Width="137"
                    Margin="0,5"
                    VerticalAlignment="Top"
                    Background="Transparent"
                    Command="{Binding ViewModel.SaveTemplateCommand}"
                    Content="Save Template"
                    Cursor="Hand"
                    Foreground="White"
                    IsEnabled="{Binding ViewModel.IsButtonEnabled}"
                    Style="{StaticResource lb_def_button02}"
                    ToolTip="Save the current mail as a json template" />

                <!--  Load Template Button  -->
                <Button
                    x:Name="btnLoadTemplate"
                    Width="137"
                    Margin="0,5"
                    VerticalAlignment="Top"
                    Background="Transparent"
                    Command="{Binding ViewModel.LoadTemplateCommand}"
                    Content="Load Template"
                    Cursor="Hand"
                    Foreground="White"
                    IsEnabled="{Binding ViewModel.IsButtonEnabled}"
                    Style="{StaticResource lb_def_button02}"
                    ToolTip="Load a previous saved json template" />

                <!--  Clear Button  -->
                <Button
                    x:Name="btnClear"
                    Width="137"
                    VerticalAlignment="Top"
                    Background="Transparent"
                    Command="{Binding ViewModel.ClearTemplateCommand}"
                    Content="Clear"
                    Cursor="Hand"
                    Foreground="White"
                    IsEnabled="{Binding ViewModel.IsButtonEnabled}"
                    Style="{StaticResource lb_def_button02}"
                    ToolTip="Clear all current mail settings" />
            </StackPanel>
            <StackPanel
                Grid.Row="4"
                Grid.ColumnSpan="3"
                Margin="0,10,250,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Orientation="Horizontal">
                <!--  Attach Item Label  -->
                <Label
                    VerticalAlignment="Center"
                    Content="Attach Item"
                    Foreground="White" />
                <Image
                    Margin="6,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Cursor="Help"
                    Source="/Assets/icon/icon_help_tip.png"
                    Stretch="None"
                    ToolTip="Click on a slot to add/edit a item, Right click to remove." />
                <!--  Item Slots  -->
                <Grid Width="140" Height="50">
                    <!--  Column definitions  -->
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <!--  Item 1  -->
                    <control:ItemSlot
                        Grid.Column="0"
                        AddItemCommand="{Binding ViewModel.AddItemCommand}"
                        CommandParameter="0"
                        IsButtonEnabled="{Binding ViewModel.IsButtonEnabled}"
                        ItemAmount="{Binding ViewModel.ItemAmount1}"
                        ItemIcon="{Binding ViewModel.ItemIcon1}"
                        ItemIconBranch="{Binding ViewModel.ItemIconBranch1}"
                        ItemName="{Binding ViewModel.ItemName1}"
                        RemoveItemCommand="{Binding ViewModel.RemoveItemCommand}" />
                    <!--  Item 2  -->
                    <control:ItemSlot
                        Grid.Column="1"
                        AddItemCommand="{Binding ViewModel.AddItemCommand}"
                        CommandParameter="1"
                        IsButtonEnabled="{Binding ViewModel.IsButtonEnabled}"
                        ItemAmount="{Binding ViewModel.ItemAmount2}"
                        ItemIcon="{Binding ViewModel.ItemIcon2}"
                        ItemIconBranch="{Binding ViewModel.ItemIconBranch2}"
                        ItemName="{Binding ViewModel.ItemName2}"
                        RemoveItemCommand="{Binding ViewModel.RemoveItemCommand}" />
                    <!--  Item 3  -->
                    <control:ItemSlot
                        Grid.Column="2"
                        AddItemCommand="{Binding ViewModel.AddItemCommand}"
                        CommandParameter="2"
                        IsButtonEnabled="{Binding ViewModel.IsButtonEnabled}"
                        ItemAmount="{Binding ViewModel.ItemAmount3}"
                        ItemIcon="{Binding ViewModel.ItemIcon3}"
                        ItemIconBranch="{Binding ViewModel.ItemIconBranch3}"
                        ItemName="{Binding ViewModel.ItemName3}"
                        RemoveItemCommand="{Binding ViewModel.RemoveItemCommand}" />
                </Grid>
            </StackPanel>
            <StackPanel
                Grid.Row="5"
                Grid.RowSpan="4"
                Grid.Column="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Orientation="Vertical">
                <Label
                    x:Name="lbAttachWhite"
                    Content="Attach Gold Amount"
                    Foreground="White"
                    Target="{Binding ElementName=intAttachWhite}" />
                <control:IntegerUpDown
                    x:Name="intAttachWhite"
                    Width="120"
                    Height="26"
                    VerticalAlignment="Top"
                    HorizontalContentAlignment="Center"
                    Increment="100"
                    Maximum="2100000000"
                    Minimum="0"
                    Value="{Binding ViewModel.AttachGold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <!--  Return Date Label  -->
                <Label
                    x:Name="lbReturnDays"
                    VerticalAlignment="Top"
                    HorizontalContentAlignment="Center"
                    Content="Return Date"
                    Foreground="White" />
                <control:IntegerUpDown
                    x:Name="intReturnDays"
                    Width="120"
                    Height="26"
                    VerticalAlignment="Top"
                    HorizontalContentAlignment="Center"
                    Increment="1"
                    Maximum="15"
                    Minimum="1"
                    Value="{Binding ViewModel.ReturnDays, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <!--  Item Charge Label  -->
                <Label
                    x:Name="lbItemCharge"
                    VerticalAlignment="Top"
                    HorizontalContentAlignment="Center"
                    Content="Item Charge"
                    Foreground="White" />
                <control:IntegerUpDown
                    x:Name="intItemCharge"
                    Width="120"
                    Height="26"
                    VerticalAlignment="Top"
                    HorizontalContentAlignment="Center"
                    Increment="100"
                    Maximum="2100000000"
                    Minimum="0"
                    Value="{Binding ViewModel.ItemCharge, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
            <Image
                Grid.Row="5"
                Grid.Column="0"
                Margin="168,24,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Source="/Assets/images/lb_ac_icon_gold.png"
                Stretch="None" />
            <Image
                Grid.Row="7"
                Grid.Column="0"
                Margin="169,24,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Source="/Assets/images/lb_ac_icon_gold.png"
                Stretch="None" />

            <!--  Send Button  -->
            <Button
                x:Name="btnSend"
                Grid.Row="8"
                Grid.Column="1"
                Width="150"
                Margin="0,10"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Background="Transparent"
                Command="{Binding ViewModel.SendMailCommand}"
                Content="Send"
                Cursor="Hand"
                Foreground="White"
                IsEnabled="{Binding ViewModel.IsButtonEnabled}"
                Style="{StaticResource lb_def_button02}"
                ToolTip="Send" />
        </Grid>
    </ContentControl>
</Window>
